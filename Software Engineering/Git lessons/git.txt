Създавне на къмит в активния бранч
git commit <file_name> -m "Commit Message" / Git Gui

Създавне на бранч
 git branch <my_first_feature>
 git checkout -b <my_branch>

Смяна на активния бранч
git checkout <my_first_feature>

Сливане на бранч към активния бранч
git merge <my_first_feature>

Vi - текстови редактор в git по подразбиране
shift и ":" -  влизане в режим за изпълняване на команди
- wq - запис и излизане
- q! - излизане без запис
ins -  вилизане в режим на редактиране на файла

Премахване на къмити
1. git reset --hard HEAD~1 - изтрива последните n(~1 в примера) на брой къмита и промените в тях. Свързано е със загуба на код!
2. git reset --soft HEAD~1 - изтрива последните n(~1 в примера) на брой къмита, но оставя промените от него.

Поставяне на промени в централното хранилище
git push --set-upstream origin [my_second_branch]

Взимане на промени от централното хранилище
git pull --rebase

Сливане на къмити
1. Пренареждане на локално дърво на последните n(в примера 10) къмита
git rebase -i HEAD~10
2. Поставяне на 's' пред къмитите, които трябва да бъдат слети към предишните
3. Запазване на промените
4. Редактиране на общото съобщение

Разрешаване на конфликти(след rebase)
1. git pull --rebase -  взимане на промените от отдалечното хранилище
2. git rebase --abort - прекратява rebase команда ако е възникнал конфликт.
3. Отваряме редактор и разрешаваме всички конфликти.
4. С git gui добавяме(stage-ваме) оправените файлове.
5. git rebase --continue
